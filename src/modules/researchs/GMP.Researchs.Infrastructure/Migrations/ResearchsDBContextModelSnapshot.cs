// <auto-generated />
using System;
using GMP.Researchs.Infrastructure.EFContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GMP.Researchs.Infrastructure.Migrations
{
    [DbContext(typeof(ResearchsDBContext))]
    partial class ResearchsDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("researchs")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GMP.Researchs.Domain.Entities.Address", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddressText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("GMP.Researchs.Domain.Entities.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentType")
                        .HasColumnType("int");

                    b.Property<string>("FamilyCellPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCritical")
                        .HasColumnType("bit");

                    b.Property<string>("LandLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Post")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialty")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("GMP.Researchs.Domain.Entities.MapHome", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContainerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MapHomes");
                });

            modelBuilder.Entity("GMP.Researchs.Domain.Entities.Solicitation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddressId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Journey")
                        .HasColumnType("int");

                    b.Property<string>("MapHomeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Reviewed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SolicitationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoVisitaEnum")
                        .HasColumnType("int");

                    b.Property<string>("UserCreatesSolicitationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserManagesSolicitationId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique()
                        .HasFilter("[AddressId] IS NOT NULL");

                    b.HasIndex("EmployeeId")
                        .IsUnique()
                        .HasFilter("[EmployeeId] IS NOT NULL");

                    b.HasIndex("MapHomeId")
                        .IsUnique()
                        .HasFilter("[MapHomeId] IS NOT NULL");

                    b.HasIndex("UserCreatesSolicitationId");

                    b.HasIndex("UserManagesSolicitationId");

                    b.ToTable("Solicitations");
                });

            modelBuilder.Entity("GMP.Researchs.Domain.Entities.TipoSolicitudEnum", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SolicitationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SolicitationId");

                    b.ToTable("TiposSolicitudes");
                });

            modelBuilder.Entity("GMP.Researchs.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GMP.Researchs.Domain.Entities.Solicitation", b =>
                {
                    b.HasOne("GMP.Researchs.Domain.Entities.Address", "Address")
                        .WithOne("Solicitation")
                        .HasForeignKey("GMP.Researchs.Domain.Entities.Solicitation", "AddressId");

                    b.HasOne("GMP.Researchs.Domain.Entities.Employee", "Employee")
                        .WithOne("Solicitation")
                        .HasForeignKey("GMP.Researchs.Domain.Entities.Solicitation", "EmployeeId");

                    b.HasOne("GMP.Researchs.Domain.Entities.MapHome", "MapHome")
                        .WithOne("Solicitation")
                        .HasForeignKey("GMP.Researchs.Domain.Entities.Solicitation", "MapHomeId");

                    b.HasOne("GMP.Researchs.Domain.Entities.User", "UserCreatesSolicitation")
                        .WithMany("CreatedSolicitations")
                        .HasForeignKey("UserCreatesSolicitationId");

                    b.HasOne("GMP.Researchs.Domain.Entities.User", "UserManagesSolicitation")
                        .WithMany("ManagedSolicitations")
                        .HasForeignKey("UserManagesSolicitationId");

                    b.Navigation("Address");

                    b.Navigation("Employee");

                    b.Navigation("MapHome");

                    b.Navigation("UserCreatesSolicitation");

                    b.Navigation("UserManagesSolicitation");
                });

            modelBuilder.Entity("GMP.Researchs.Domain.Entities.TipoSolicitudEnum", b =>
                {
                    b.HasOne("GMP.Researchs.Domain.Entities.Solicitation", null)
                        .WithMany("TipoSolicitudEnums")
                        .HasForeignKey("SolicitationId");
                });

            modelBuilder.Entity("GMP.Researchs.Domain.Entities.Address", b =>
                {
                    b.Navigation("Solicitation");
                });

            modelBuilder.Entity("GMP.Researchs.Domain.Entities.Employee", b =>
                {
                    b.Navigation("Solicitation");
                });

            modelBuilder.Entity("GMP.Researchs.Domain.Entities.MapHome", b =>
                {
                    b.Navigation("Solicitation");
                });

            modelBuilder.Entity("GMP.Researchs.Domain.Entities.Solicitation", b =>
                {
                    b.Navigation("TipoSolicitudEnums");
                });

            modelBuilder.Entity("GMP.Researchs.Domain.Entities.User", b =>
                {
                    b.Navigation("CreatedSolicitations");

                    b.Navigation("ManagedSolicitations");
                });
#pragma warning restore 612, 618
        }
    }
}
